#!/usr/bin/env python3
import sys


def solve(N: int, M: int, X: "List[int]"):
    if N >= M:
        return 0
    X = sorted(X)
    D = [x2 - x1 for x1, x2 in zip(X, X[1:])]
    return sum(sorted(D)[:M-N])


# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    M = int(next(tokens))  # type: int
    X = [int(next(tokens)) for _ in range(M)]  # type: "List[int]"
    print(solve(N, M, X))

def test():
    import doctest
    doctest.testmod()

if __name__ == '__main__':
    #test()
    main()
