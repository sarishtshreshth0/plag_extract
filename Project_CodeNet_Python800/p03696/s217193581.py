#!/usr/bin/env python3
import sys

def f(S):
    '''
    >>> f('(')
    '('
    >>> f(')(')
    ')('
    >>> f('()')
    ''
    >>> f('(())(')
    '('
    >>> f('())')
    ')'
     '''
    stack = []
    for s in S:
        if s == ')':
            if stack and stack[-1] == '(':
                stack.pop()
            else:
                stack.append(')')
        else:
            stack.append(s)
    return ''.join(stack)


def solve(N: int, S: str):
    s = f(S)
    return '(' * s.count(')') + S + ')' * s.count('(')


# Generated by 1.1.6 https://github.com/kyuridenamida/atcoder-tools
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    S = next(tokens)  # type: str
    print(solve(N, S))

def test():
    import doctest
    doctest.testmod()

if __name__ == '__main__':
    test()
    main()
