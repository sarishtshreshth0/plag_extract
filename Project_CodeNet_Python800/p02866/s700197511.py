#!/usr/bin/env python3
import sys

MOD = 998244353  # type: int


def solve(N: int, D: "List[int]"):
    from collections import Counter
    c = Counter(D)

    x = sorted(list(set(D)))
    if any([0 >= i for i in D[1:]]):
        print(0)
        exit()

    if D[0] != 0 or len(x) <= 1 or max(x) - min(x) + 1 != len(x):
        print(0)
        exit()

    ans = 1
    for i in range(2, N):
        if c[i - 1] >= 2:
            ans *= pow(c[i - 1], c[i]) % MOD

    print(ans % MOD)

    return


# Generated by 1.1.6 https://github.com/kyuridenamida/atcoder-tools
# (tips: You use the default template now. You can remove this line by
# using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    D = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    solve(N, D)


if __name__ == '__main__':
    main()
